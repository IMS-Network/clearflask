
components:
  schemas:
    Config:
      x-clearflask-page: { name: 'Project', menuDefaultExpanded: true }
      description: Config properties visible both to client app and admins.
      type: object
      properties:
        name:
          x-clearflask-prop: { order: 1, name: 'Name', description: 'Project name visible on your page' }
          type: string
        logoUrl:
          x-clearflask-prop: { order: 2, name: 'Logo', description: 'Add your logo with a url', placeholder: 'https://' }
          description: Location of the logo to display.
          type: string
        pages:
          x-clearflask-page-group: { order: 1, name: 'Pages', tablePropertyNames:['name', 'slug', 'title'] }
          type: array
          minItems: 1
          items:
            x-clearflask-page: { name: 'Page', nameFromProp: 'name' }
            title: Page
            type: object
            properties:
              name:
                x-clearflask-prop: { name: 'Name', description: 'Page name shown on links and buttons pointing to this page', placeholder: 'Feature Requests' }
                type: string
              slug:
                x-clearflask-prop: { name: 'Slug', description: 'Text to display in the URL part of this page', placeholder: 'feature-requests' }
                type: string
              title:
                x-clearflask-prop: { name: 'Title', description: 'Main title visible on the tab and as first text on this page', placeholder: 'Feature Requests' }
                type: string
              description:
                x-clearflask-prop: { name: 'Description', description: 'Description of this page visible just below the title', placeholder: 'Submit your...' }
                type: string
              panels:
                x-clearflask-page-group: { name: 'Panels', nameFromProp: 'title', tablePropertyNames:['title'] }
                type: array
                items:
                  $ref: 'api-project.yaml#/components/schemas/PagePanel'
              board:
                $ref: 'api-project.yaml#/components/schemas/PageBoard'
              explorer:
                $ref: 'api-project.yaml#/components/schemas/PageExplorer'
            required:
              - name
              - slug
        creditFormatter:
          x-clearflask-page: { order: 2, name: 'Credits' }
          title: CreditFormatter
          description: >-
            Defines a format for credit.
            Entries are evaluated in order. Each entry
            matching greaterThan and lessThan value that
            matches the current value will be concatenated
            with the given separator.
          type: object
          properties:
            formats:
              x-clearflask-prop: { name: 'Formats', description: 'Formats to apply' }
              type: array
              items:
                title: CreditFormatterEntry
                type: object
                properties:
                  greaterThan:
                    x-clearflask-prop: { name: 'Greater than', description: 'Applies this format only if credit value is greater than', placeholder: '0' }
                    type: number
                  lessThan:
                    x-clearflask-prop: { name: 'Less than', description: 'Applies this format only if credit value is less than', placeholder: '100' }
                    type: number
                  multiplier:
                    x-clearflask-prop: { name: 'Multiplier', description: 'Multiply value before displaying', placeholder: '0.01' }
                    type: number
                  insignificant:
                    x-clearflask-prop: { name: 'Insignificant digits', description: 'Minimum amount of digits to display regardless of value', placeholder: '2' }
                    type: integer
                  significant:
                    x-clearflask-prop: { name: 'Significant digits', description: 'Maximum amount of digits to display regardless of value', placeholder: '0' }
                    type: integer
                  prefix:
                    x-clearflask-prop: { name: 'Prefix', description: 'Text to prepend before the value', placeholder: '$' }
                    type: string
                  suffix:
                    x-clearflask-prop: { name: 'Suffix', description: 'Text to append after the value', placeholder: '%' }
                    type: string
        voteSettingsParent:
          $ref: 'api-project.yaml#/components/schemas/VoteSettingsCommon'
        ideaSettings:
          $ref: 'api-project.yaml#/components/schemas/ideaSettings'
      required:
        - name
        - pages
        - creditFormatter
        - ideaSettingsParent
        - ideaSettings
        - voteSettingsParent
        - ideaGroups
        - ideaStatuses
        - supportType
    ideaSettings:
      allOf:
        - $ref: 'api-project.yaml#/components/schemas/IdeaSettingsCommon'
        - x-clearflask-page: { order: 1, name: 'Ideas', menuDefaultExpanded: true }
          title: IdeaSettings
          type: object
          properties:
            statuses:
              x-clearflask-page-group: { order: 1, name: 'Statuses', tablePropertyNames:['name', 'color'] }
              type: array
              items:
                x-clearflask-page: { name: 'Status', nameFromProp: 'name' }
                title: IdeaStatus
                type: object
                properties:
                  statusId:
                    x-clearflask-prop: { subType: 'id' }
                    type: string
                  name:
                    x-clearflask-prop: { name: 'Name', description: 'Display name shown to user', placeholder: 'In Progress' }
                    type: string
                  nextStatusIds:
                    type: array
                    items:
                      title: NextStatusLink
                      type: object
                      properties:
                        nextStatusId:
                          x-clearflask-prop-link: { linkPath: ['ideaSettings', 'statuses'], showPropNames: ['name']}
                          type: string
                        transitionText:
                          type: string
                      required:
                        - nextStatusId
                  color:
                    x-clearflask-prop: { subType: 'color', name: 'Color', description: 'Display color' }
                    type: string
                  allowFunding:
                    x-clearflask-prop: { name: 'Allow Funding', description: 'Overrides parent settings to allow funding during this status' }
                    type: boolean
                  allowSupport:
                    x-clearflask-prop: { name: 'Allow Support', description: 'Overrides parent settings to allow support during this status' }
                    type: boolean
                  allowIdeaEdits:
                    x-clearflask-prop: { name: 'Allow Editing', description: 'Overrides parent settings to allow editing of the idea during this status' }
                    type: boolean
                  allowComments:
                    x-clearflask-prop: { name: 'Allow Comments', description: 'Overrides parent settings to allow commenting during this status' }
                    type: boolean
                required:
                  - statusId
                  - name
            tags:
              x-clearflask-page-group: { order: 3, name: 'Tags', tablePropertyNames:['name', 'color'] }
              type: array
              items:
                x-clearflask-page: { name: 'Tag', nameFromProp: 'name' }
                title: IdeaTag
                type: object
                properties:
                  tagId:
                    type: string
                  name:
                    type: string
                  color:
                    x-clearflask-prop: { subType: 'color', name: 'Color', description: 'Display color' }
                    type: string
                required:
                  - tagId
                  - name
            groups:
              x-clearflask-page-group: { order: 2, name: 'Groups', tablePropertyNames:['name', 'color'] }
              type: array
              items:
                x-clearflask-page: { name: 'Group', nameFromProp: 'name' }
                title: IdeaGroup
                type: object
                properties:
                  groupId:
                    type: string
                  parentIdeaGroupId:
                    type: string
                  name:
                    type: string
                  color:
                    x-clearflask-prop: { subType: 'color', name: 'Color', description: 'Display color' }
                    type: string
                  ideaSettingsOverride:
                    $ref: 'api-project.yaml#/components/schemas/IdeaSettingsCommon'
                  voteSettingsOverride:
                    $ref: 'api-project.yaml#/components/schemas/VoteSettingsCommon'
                  defaultIdeaStatusId:
                    description: >-
                      Idea status to assign on newly created ideas.
                      If not set, project level default applies.
                    type: string
                  defaultIdeaTagIds:
                    type: array
                    items:
                      type: string
                  settableIdeaVisibility:
                    type: boolean
                  settableIdeaTagIdsOnCreate:
                    description: >-
                      In addition to project level idea tags,
                      these tags can also be added by user
                      when creating an idea.
                    type: array
                    items:
                      type: string
                required:
                  - groupId
                  - name
          required:
            - statuses
            - tags
            - groups
    ConfigAdmin:
      description: >-
        All Config properties available for admins.
        Used for both reading and writing.
      allOf:
        - $ref: 'api-project.yaml#/components/schemas/Config'
        - type: object
          properties:
        # TODO OAuth
        # TODO Email/Push notifications
        # TODO Credit income
        # TODO Trusted public keys
    PageBoard:
      x-clearflask-page: { name: 'Board' }
      type: object
      properties:
        title:
          type: string
        panels:
          type: array
          items:
            $ref: 'api-project.yaml#/components/schemas/PagePanel'
      required:
        - panels
    PagePanel:
      x-clearflask-page: { name: 'Panel' }
      type: object
      properties:
        title:
          type: string
        hideIfEmpty:
          type: boolean
        ideaList:
          $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
        enableSearchByGroup:
          type: boolean
        enableSearchByStatus:
          type: boolean
        enableSearchByTag:
          type: boolean
      required:
        - ideaList
    PageExplorer:
      x-clearflask-page: { name: 'Explorer' }
      type: object
      properties:
        title:
          x-clearflask-prop: { name: 'Title', description: 'Title to display above the explorer.' }
          type: string
        ideaList:
          $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
      required:
        - ideaList
    VoteSettingsCommon:
      x-clearflask-page: { order: 2, name: 'Voting', description: 'Can be overriden inside IdeaGroup.' }
      type: object
      properties:
        allowFunding:
          x-clearflask-prop: { name: 'Allow Funding', description: 'Allows users to use their credits for posts in this group.' }
          type: boolean
        allowSupport:
          x-clearflask-prop: { name: 'Allow Support', description: 'Allows users to show support for posts in this group.' }
          type: boolean
    IdeaSettingsCommon:
      x-clearflask-page: { order: 1, name: 'Idea settings', description: 'Idea settings common between project and group levels.' }
      type: object
      properties:
        defaultStatusId:
          x-clearflask-prop: { name: 'Default Status', description: 'Idea status to assign if any on newly created ideas. Can be overriden in group.' }
          x-clearflask-prop-link: { linkPath: ['ideaSettings', 'statuses'], showPropNames: ['name']}
          type: string
        defaultIdeaTagIds:
          x-clearflask-prop: { name: 'Default Tag Ids', description: 'Idea tag ids to apply. Cannot be modified by user.' }
          type: array
          items:
            type: string
        defaultIdeaVisibility:
          x-clearflask-prop: { name: 'Default Visibility', description: 'Whether a post is visible publicly by other users.' }
          type: string
          enum:
            - Public
            - Private
        settableIdeaVisibility:
          x-clearflask-prop: { name: 'Settable Visibility', description: 'User can toggle whether a post is visible publicly by other users or privately only by you.' }
          type: boolean
        tagsOnCreate:
          x-clearflask-prop: { name: 'Settable Tag Id groups', description: 'These tags can be added by user when creating a new idea. Will be merged with configuration inside IdeaGroup.' }
          type: array
          items:
            title: TagGroupings
            type: object
            properties:
              minRequired:
                x-clearflask-prop: { name: 'Minimum required', description: 'Minimum number of tags that need to be chosen by user.' }
                type: number
              maxRequired:
                x-clearflask-prop: { name: 'Maximum required', description: 'Maximum number of tags that can be chosen by user.' }
                type: number
              tagIds:
                x-clearflask-prop: { name: 'Tags', description: 'List of tags for this group.' }
                type: array
                items:
                  type: string

/project/{projectId}/config:
  get:
    operationId: configGet
    tags: [Project]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/Config'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/admin:
  post:
    operationId: projectCreateAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: NewProjectResult
              type: object
              properties:
                projectId:
                  type: string
                config:
                  $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
/project/{projectId}/admin/config:
  get:
    operationId: configGetAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  put:
    operationId: configSetAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: versionLast
        in: path
        required: true
        schema:
          type: string
      - name: config
        in: query
        required: true
        schema:
          $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: NewConfigResult
              type: object
              properties:
                config:
                  $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
                version:
                  type: string
              required:
                - config
                - version
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
