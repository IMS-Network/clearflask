<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>clearflask-parent</artifactId>
        <groupId>com.smotana.clearflask</groupId>
        <version>0.1</version>
    </parent>

    <artifactId>clearflask-server</artifactId>
    <version>0.1</version>
    <packaging>war</packaging>

    <name>clearflask</name>
    <url>https://clearflask.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.smotana.clearflask</groupId>
            <artifactId>clearflask-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dampcake</groupId>
            <artifactId>gson-immutable</artifactId>
        </dependency>
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.spotify</groupId>
            <artifactId>docker-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.connectors</groupId>
            <artifactId>jersey-apache-connector</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kik.config</groupId>
            <artifactId>ice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.kik.config</groupId>
            <artifactId>ice-jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-high-level-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sesv2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-ses</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
        </dependency>
        <dependency>
            <groupId>com.almworks.sqlite4java</groupId>
            <artifactId>sqlite4java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.almworks.sqlite4java</groupId>
            <artifactId>sqlite4java-win32-x86</artifactId>
            <type>dll</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.almworks.sqlite4java</groupId>
            <artifactId>sqlite4java-win32-x64</artifactId>
            <type>dll</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.almworks.sqlite4java</groupId>
            <artifactId>libsqlite4java-osx</artifactId>
            <type>dylib</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.almworks.sqlite4java</groupId>
            <artifactId>libsqlite4java-linux-i386</artifactId>
            <type>so</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.almworks.sqlite4java</groupId>
            <artifactId>libsqlite4java-linux-amd64</artifactId>
            <type>so</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>guice-bridge</artifactId>
        </dependency>

        <dependency>
            <groupId>org.kill-bill.billing</groupId>
            <artifactId>killbill-client-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kill-bill.billing.plugin</groupId>
            <artifactId>killbill-plugin-api-notification</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kill-bill.billing.plugin.java</groupId>
            <artifactId>payment-test-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kill-bill.billing.plugin.java</groupId>
            <artifactId>stripe-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kill-bill.billing.plugin.java</groupId>
            <artifactId>killbill-email-notifications-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kill-bill.billing.plugin.java</groupId>
            <artifactId>analytics-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kill-bill.billing</groupId>
            <artifactId>killbill-catalog</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.github.rholder</groupId>
            <artifactId>guava-retrying</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.simschla</groupId>
            <artifactId>fast-and-simple-minify</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.martijndwars</groupId>
            <artifactId>web-push</artifactId>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
        </dependency>
        <!-- test-only deps -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.test</groupId>
            <artifactId>framework</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>DynamoDBLocal</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.plugin</groupId>
            <artifactId>transport-netty4-client</artifactId>
            <version>5.1.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <configuration>
                    <protoSourceRoot>${basedir}/src/main/proto</protoSourceRoot>
                    <protocExecutable>protoc</protocExecutable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.alexcojocaru</groupId>
                <artifactId>elasticsearch-maven-plugin</artifactId>
                <configuration>
                    <version>${elastic.version}</version>
                    <clusterName>test</clusterName>
                    <transportPort>9300</transportPort>
                    <httpPort>9200</httpPort>
                    <skip>${skipTests}${skipITs}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>start-elasticsearch</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>runforked</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-elasticsearch</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipTests}${skipITs}</skip>
                    <autoRemove>true</autoRemove>
                    <startParallel>true</startParallel>
                    <images>
                        <image>
                            <alias>killbill-db</alias>
                            <name>killbill/mariadb:0.22</name>
                            <run>
                                <volumes>
                                    <bind>
                                        <volume>
                                            ${project.build.directory}/kb-ddl/plugins.sql:/docker-entrypoint-initdb.d/050-plugins.sql
                                        </volume>
                                    </bind>
                                </volumes>
                                <env>
                                    <MYSQL_ROOT_PASSWORD>killbill</MYSQL_ROOT_PASSWORD>
                                </env>
                                <ports>
                                    <port>8306:3306</port>
                                </ports>
                                <wait>
                                    <time>300000</time>
                                    <log>.*mysqld: ready for connections\..*</log>
                                </wait>
                                <log>
                                    <prefix>killbill-db:</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                        <image>
                            <alias>killbill-engine</alias>
                            <name>killbill/killbill:0.22.10</name>
                            <run>
                                <volumes>
                                    <bind>
                                        <volume>
                                            ${project.basedir}/src/test/resources/killbill-setenv2.sh:/var/lib/tomcat/bin/setenv2.sh
                                        </volume>
                                        <volume>
                                            ${project.basedir}/src/test/resources/logging-dev.properties:/var/lib/tomcat/conf/logging.properties
                                        </volume>
                                        <volume>
                                            ${project.basedir}/src/test/resources/logback-killbill-engine.xml:/var/lib/killbill/logback.xml
                                        </volume>
                                        <volume>
                                            ${project.basedir}/src/test/resources/killbill.sh:/var/lib/killbill/killbill.sh
                                        </volume>
                                        <volume>
                                            ${project.build.directory}/kb-plugins:/var/lib/killbill/bundles/autoload
                                        </volume>
                                    </bind>
                                </volumes>
                                <env>
                                    <KILLBILL_DAO_URL>jdbc:mysql://host.docker.internal:8306/killbill
                                    </KILLBILL_DAO_URL>
                                    <KILLBILL_DAO_USER>root</KILLBILL_DAO_USER>
                                    <KILLBILL_DAO_PASSWORD>killbill</KILLBILL_DAO_PASSWORD>
                                    <KILLBILL_SERVER_TEST_MODE>true</KILLBILL_SERVER_TEST_MODE>
                                    <KILLBILL_NOTIFICATIONQ_ANALYTICS_TABLE_NAME>analytics_notifications
                                    </KILLBILL_NOTIFICATIONQ_ANALYTICS_TABLE_NAME>
                                    <KILLBILL_NOTIFICATIONQ_ANALYTICS_HISTORY_TABLE_NAME>
                                        analytics_notifications_history
                                    </KILLBILL_NOTIFICATIONQ_ANALYTICS_HISTORY_TABLE_NAME>
                                </env>
                                <ports>
                                    <port>8082:8080</port>
                                </ports>
                                <wait>
                                    <time>300000</time>
                                    <log>.*Kill Bill server has started.*</log>
                                </wait>
                                <log>
                                    <prefix>killbill-engine:</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                        <!-- Uncomment to enable Kaui -->
                        <!-- <image>
                            <alias>killbill-kaui</alias>
                            <name>killbill/kaui:2.0.5</name>
                            <run>
                                <env>
                                    <KAUI_CONFIG_DAO_URL>jdbc:mysql://host.docker.internal:38306/kaui</KAUI_CONFIG_DAO_URL>
                                    <KAUI_CONFIG_DAO_USER>root</KAUI_CONFIG_DAO_USER>
                                    <KAUI_CONFIG_DAO_PASSWORD>killbill</KAUI_CONFIG_DAO_PASSWORD>
                                    <KAUI_KILLBILL_URL>http://host.docker.internal:8082</KAUI_KILLBILL_URL>
                                </env>
                                <ports>
                                    <port>8081:8080</port>
                                </ports>
                                <wait>
                                    <time>300000</time>
                                    <log>.*INFO: Server startup in .* ms.*</log>
                                </wait>
                            </run>
                        </image> -->
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>clean-unpack</id>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/war-include</directory>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-frontend</artifactId>
                                    <version>${project.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/war-include/</outputDirectory>
                                    <includes>ROOT/**</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-legal</artifactId>
                                    <classifier>legal</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/resources-legal/legal/</outputDirectory>
                                    <includes>**</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>payment-test-plugin</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-ddl/sources/payment-test-plugin/
                                    </outputDirectory>
                                    <includes>ddl.sql</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>stripe-plugin</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-ddl/sources/stripe-plugin/
                                    </outputDirectory>
                                    <includes>ddl.sql</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>killbill-email-notifications-plugin</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>
                                        ${project.build.directory}/kb-ddl/sources/killbill-email-notifications-plugin/
                                    </outputDirectory>
                                    <includes>ddl.sql</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>analytics-plugin</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-ddl/sources/analytics-plugin/
                                    </outputDirectory>
                                    <includes>org/killbill/billing/plugin/analytics/ddl.sql,system/**,reports/**
                                    </includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/wars</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>payment-test-plugin</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-plugins/</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>stripe-plugin</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-plugins/</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>killbill-email-notifications-plugin</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-plugins/</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.kill-bill.billing.plugin.java</groupId>
                                    <artifactId>analytics-plugin</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/kb-plugins/</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${project.build.scriptSourceDirectory}/prepare-kb-ddl.sh</executable>
                    <arguments>
                        <argument>${project.build.directory}/kb-ddl/sources</argument>
                        <argument>${project.build.directory}/kb-ddl/plugins.sql</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/resources-legal</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>dylib,dll,so</includeTypes>
                            <outputDirectory>${project.build.directory}/native-lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${project.build.directory}/war-include/ROOT/</directory>
                            <includes>**</includes>
                            <targetPath>/</targetPath>
                        </resource>
                    </webResources>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>war</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
