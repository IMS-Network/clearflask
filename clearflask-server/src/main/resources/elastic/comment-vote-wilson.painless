/**
 * Inputs:
 *   int upvoteDiff
 *   int downvoteDiff
 *   double z
 */

if(params.upvoteDiff != 0) {
    ctx._source.upvote += params.upvoteDiff;
}
if(params.downvoteDiff != 0) {
    ctx._source.upvote += params.downvoteDiff;
}

int numberOfSuccesses = ctx._source.upvotes;
int numberOfTrials = numberOfSuccesses + ctx._source.downvotes;
double z = params.z;

// See WilsonScoreInterval.java
if (numberOfTrials == 0) {
    ctx._source.score = 0d;
} else {
    double zSquared = z * z;
    double mean = (double) numberOfSuccesses / (double) numberOfTrials;
    double factor = 1.0D / (1.0D + 1.0D / (double) numberOfTrials * zSquared);
    double modifiedSuccessRatio = mean + 1.0D / (double) (2 * numberOfTrials) * zSquared;
    double difference = z * FastMath.sqrt(1.0D / (double) numberOfTrials * mean * (1.0D - mean) + 1.0D / (4.0D * FastMath.pow((double) numberOfTrials, 2)) * zSquared);
    double lowerBound = factor * (modifiedSuccessRatio - difference);
    ctx._source.score = lowerBound;
}
