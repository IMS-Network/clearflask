components:
  schemas:
    VoteOption:
      type: string
      enum:
      - upvote
      - downvote
      - none
    VoteSearchAdmin:
      type: object
      properties:
        filterIdeaIds:
          type: array
          items:
            type: string
        filterUserIds:
          type: array
          items:
            type: string
        sortBy:
          type: string
          enum:
          - Recent
      required:
      - sortBy
    Vote:
      type: object
      required:
      - ideaId
      - voterUserId
      properties:
        ideaId:
          type: string
        voterUserId:
          type: string
        fundAmount:
          description: Optional amount of credits to fund.
          type: number
        vote:
          $ref: 'api-vote.yaml#/components/schemas/VoteOption'
        expressions:
          description: Optional expression type given.
          type: array
          items:
            type: string
    VoteUpdate:
      type: object
      required:
      - ideaId
      properties:
        ideaId:
          type: string
        fundAmount:
          type: number
        vote:
          $ref: 'api-vote.yaml#/components/schemas/VoteOption'
        expressions:
          type: object
          required:
          - action
          - expression
          properties:
            action:
              type: string
              enum:
              - add
              - remove
            expression:
              type: string
    VoteUpdateAdmin:
      allOf:
        - $ref: 'api-vote.yaml#/components/schemas/VoteUpdate'
        - type: object
          required:
          - voterUserId
          properties:
            voterUserId:
              type: string

/project/{projectId}/idea/{ideaId}/vote:
  get:
    operationId: voteGetOwn
    tags: [Vote]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            title: voteGetOwn
            required:
            - ideaIds
            properties:
              ideaIds:
                type: array
                items:
                  type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: VoteGetOwnResponse
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: 'api-vote.yaml#/components/schemas/Vote'
              required:
              - results
  patch:
    operationId: voteUpdate
    tags: [Vote]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-vote.yaml#/components/schemas/VoteUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: VoteUpdateResponse
              type: object
              required:
              - vote
              - idea
              properties:
                vote:
                  $ref: 'api-vote.yaml#/components/schemas/Vote'
                idea:
                  $ref: 'api-idea.yaml#/components/schemas/Idea'
                balance:
                  $ref: 'api-credit.yaml#/components/schemas/Balance'
                transaction:
                  $ref: 'api-credit.yaml#/components/schemas/Transaction'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/vote:
  get:
    operationId: voteSearchAdmin
    tags: [VoteAdmin]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: cursor
      in: query
      schema:
        $ref: 'api-client.yaml#/components/schemas/Cursor'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-vote.yaml#/components/schemas/VoteSearchAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: VoteSearchResponse
              type: object
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-vote.yaml#/components/schemas/Vote'
              required:
              - results
  delete:
    operationId: voteDeleteBulkAdmin
    tags: [VoteAdmin]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-vote.yaml#/components/schemas/VoteSearchAdmin'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/vote:
  patch:
    operationId: voteUpdateAdmin
    tags: [VoteAdmin]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-vote.yaml#/components/schemas/VoteUpdateAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: VoteUpdateAdminResponse
              type: object
              required:
              - vote
              - idea
              properties:
                vote:
                  $ref: 'api-vote.yaml#/components/schemas/Vote'
                idea:
                  $ref: 'api-idea.yaml#/components/schemas/Idea'
                balance:
                  $ref: 'api-credit.yaml#/components/schemas/Balance'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: voteDeleteAdmin
    tags: [VoteAdmin]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: voteId
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
