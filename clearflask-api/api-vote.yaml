
components:
  schemas:
    VoteSearchAdmin:
      type: object
      properties:
        filterIdeaIds:
          type: array
          items:
            type: string
        filterUserIds:
          type: array
          items:
            type: string
        sortBy:
          type: string
          enum: 
            - Recent
      required:
        - sortBy
    VoteRead:
      type: object
      properties:
        voterName:
          description: >-
            For privacy, name may not be present.
            If so, assume user is anonymous.
          type: string
    VoteReadAdmin:
      allOf:
        - $ref: 'api-vote.yaml#/components/schemas/VoteRead'
        - type: object
          properties:
            voterUserId:
              type: string
          required:
            - voterUserId
    VoteCreate:
      type: object
      properties:
        fundAmount:
          description: Optional amount of credits to fund.
          type: number
        supportTypeIds:
          description: Optional support type given.
          type: array
          items:
            type: string
    VoteUpdate:
      type: object
      properties:
        fundAmount:
          type: number
        supportTypeIds:
          type: object
          properties:
            add:
              type: array
              items:
                type: string
            remove:
              type: array
              items:
                type: string

/project/{projectId}/idea/{ideaId}/vote:
  post:
    operationId: voteCreate
    tags: [Vote]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: create
        in: query
        required: true
        schema:
          $ref: 'api-vote.yaml#/components/schemas/VoteUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-vote.yaml#/components/schemas/VoteRead'
/project/{projectId}/idea/{ideaId}/vote/{voteId}:
  patch:
    operationId: voteUpdate
    tags: [Vote]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: voteId
        in: path
        required: true
        schema:
          type: string
      - name: update
        in: query
        required: true
        schema:
          $ref: 'api-vote.yaml#/components/schemas/VoteUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-vote.yaml#/components/schemas/VoteRead'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: voteDelete
    tags: [Vote]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: voteId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/vote:
  get:
    operationId: voteSearchAdmin
    tags: [VoteAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
      - name: search
        in: query
        required: true
        schema:
          $ref: 'api-vote.yaml#/components/schemas/VoteSearchAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: VoteSearchResponse
              type: object
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-vote.yaml#/components/schemas/VoteReadAdmin'
              required:
                - results
  delete:
    operationId: voteDeleteBulkAdmin
    tags: [VoteAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: search
        in: query
        required: true
        schema:
          $ref: 'api-vote.yaml#/components/schemas/VoteSearchAdmin'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/vote:
  post:
    operationId: voteCreateAdmin
    tags: [VoteAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: vote
        in: query
        required: true
        schema:
          $ref: 'api-vote.yaml#/components/schemas/VoteCreate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-vote.yaml#/components/schemas/VoteReadAdmin'
/project/{projectId}/admin/idea/{ideaId}/vote/{voteId}:
  patch:
    operationId: voteUpdateAdmin
    tags: [VoteAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: voteId
        in: path
        required: true
        schema:
          type: string
      - name: update
        in: query
        required: true
        schema:
          $ref: 'api-vote.yaml#/components/schemas/VoteUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-vote.yaml#/components/schemas/VoteReadAdmin'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: voteDeleteAdmin
    tags: [VoteAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: voteId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
