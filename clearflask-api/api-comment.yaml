
components:
  schemas:
    CommentSearchAdmin:
      type: object
      properties:
        filterUserIds:
          type: array
          items:
            type: string
    Comment:
      type: object
      properties:
        ideaId:
          type: string
        commentId:
          type: string
        parentCommentId:
          type: string
        authorUserId:
          description: Author of the comment. If null, comment is deleted
          type: string
        created:
          type: string
          format: date-time
        edited:
          description: If set, comment was last edited at this time.
          type: string
          format: date-time
        content:
          type: string
      required:
        - ideaId
        - commentId
        - created
    CommentWithAuthor:
      allOf:
        - $ref: 'api-comment.yaml#/components/schemas/Comment'
        - type: object
          properties:
            author:
              $ref: 'api-user.yaml#/components/schemas/User'
    CommentCreate:
      type: object
      properties:
        parentCommentId:
          type: string
        authorUserId:
          type: string
        content:
          type: string
      required:
        - authorUserId
        - content
    CommentCreateAdmin:
      allOf:
        - $ref: 'api-comment.yaml#/components/schemas/CommentCreate'
        - type: object
          properties:
            created:
              type: string
              format: date-time
          required:
    CommentUpdate:
      type: object
      properties:
        content:
          type: string

/project/{projectId}/idea/{ideaId}/comment:
  get:
    operationId: commentList
    tags: [Comment]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: CommentSearchResponse
              type: object
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-comment.yaml#/components/schemas/CommentWithAuthor'
              required:
                - results
  post:
    operationId: commentCreate
    tags: [Comment]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: create
        in: query
        required: true
        schema:
          $ref: 'api-comment.yaml#/components/schemas/CommentUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
/project/{projectId}/idea/{ideaId}/comment/{commentId}:
  patch:
    operationId: commentUpdate
    tags: [Comment]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        schema:
          type: string
      - name: update
        in: query
        required: true
        schema:
          $ref: 'api-comment.yaml#/components/schemas/CommentUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: commentDelete
    tags: [Comment]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/comment:
  get:
    operationId: commentSearchAdmin
    tags: [CommentAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
      - name: search
        in: query
        required: true
        schema:
          $ref: 'api-comment.yaml#/components/schemas/CommentSearchAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: CommentSearchResponse
              type: object
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-comment.yaml#/components/schemas/CommentWithAuthor'
              required:
                - results
  delete:
    operationId: commentDeleteBulkAdmin
    tags: [CommentAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: search
        in: query
        required: true
        schema:
          $ref: 'api-comment.yaml#/components/schemas/CommentSearchAdmin'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/comment:
  post:
    operationId: commentCreateAdmin
    tags: [CommentAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: comment
        in: query
        required: true
        schema:
          $ref: 'api-comment.yaml#/components/schemas/CommentCreateAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
/project/{projectId}/admin/idea/{ideaId}/comment/{commentId}:
  patch:
    operationId: commentUpdateAdmin
    tags: [CommentAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        schema:
          type: string
      - name: update
        in: query
        required: true
        schema:
          $ref: 'api-comment.yaml#/components/schemas/CommentUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: commentDeleteAdmin
    tags: [CommentAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
