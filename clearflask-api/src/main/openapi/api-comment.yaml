components:
  schemas:
    CommentSearch:
      type: object
      properties:
        parentCommentId:
          type: string
        excludeChildrenCommentIds:
          type: array
          items:
            type: string
    Comment:
      type: object
      required:
      - ideaId
      - commentId
      - childCommentCount
      - created
      - voteValue
      properties:
        ideaId:
          type: string
        commentId:
          type: string
        parentCommentId:
          type: string
        author:
          $ref: 'api-user.yaml#/components/schemas/User'
        childCommentCount:
          type: integer
          format: int64
        authorUserId:
          description: Author of the comment. If null, comment is deleted
          type: string
        created:
          type: string
          format: date-time
        edited:
          description: If set, comment was last edited at this time. If deleted, this is deleted time.
          type: string
          format: date-time
        content:
          description: Comment content. If null, comment is deleted
          type: string
        voteValue:
          type: integer
          format: int64
    CommentWithVote:
      allOf:
      - $ref: 'api-comment.yaml#/components/schemas/Comment'
      - type: object
        properties:
          vote:
            $ref: 'api-vote.yaml#/components/schemas/VoteOption'
    CommentCreate:
      type: object
      properties:
        parentCommentId:
          type: string
        content:
          type: string
      required:
      - content
    CommentUpdate:
      type: object
      properties:
        content:
          type: string

/project/{projectId}/idea/{ideaId}/commentsearch:
  post:
    operationId: commentList
    tags: [Comment]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: ideaId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-comment.yaml#/components/schemas/CommentSearch'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: CommentSearchResponse
              type: object
              required:
              - results
              properties:
                results:
                  type: array
                  items:
                    $ref: 'api-comment.yaml#/components/schemas/CommentWithVote'

/project/{projectId}/idea/{ideaId}/comment:
  post:
    operationId: commentCreate
    tags: [Comment]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: ideaId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-comment.yaml#/components/schemas/CommentCreate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/CommentWithVote'
/project/{projectId}/idea/{ideaId}/comment/{commentId}:
  patch:
    operationId: commentUpdate
    tags: [Comment]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: ideaId
      in: path
      required: true
      schema:
        type: string
    - name: commentId
      in: path
      required: true
      schema:
        type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-comment.yaml#/components/schemas/CommentUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: commentDelete
    tags: [Comment]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: ideaId
      in: path
      required: true
      schema:
        type: string
    - name: commentId
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/comment/{commentId}:
  delete:
    operationId: commentDeleteAdmin
    tags: [CommentAdmin]
    parameters:
    - name: projectId
      in: path
      required: true
      schema:
        type: string
    - name: ideaId
      in: path
      required: true
      schema:
        type: string
    - name: commentId
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-comment.yaml#/components/schemas/Comment'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
