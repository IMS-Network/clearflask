
components:
  schemas:
    Config:
      x-clearflask-page: { name: 'Project', nameFromProp: 'name' }
      description: Config properties visible both to client app and admins.
      type: object
      required:
        - test
        - projectId
        - name
        - slug
        - credits
        - layout
        - content
        - style
      properties:
        # TODO remove test page
        # test:
        #   $ref: 'api-test.yaml#/components/schemas/ConfigTest'
        projectId:
          x-clearflask-prop: { subType: 'id' }
          type: string
        website:
          x-clearflask-prop: { order: 1, name: 'Website', description: 'Your external website', placeholder: 'https://' }
          type: string
        name:
          x-clearflask-prop: { order: 2, name: 'Name', description: 'Project name visible on your page' }
          type: string
        logoUrl:
          x-clearflask-prop: { order: 3, name: 'Logo', description: 'Add your logo with a url', placeholder: 'https://' }
          description: Location of the logo to display.
          type: string
        projectSlug:
          x-clearflask-prop: { order: 4, name: 'Slug', description: 'Url suffix of your project: https://clearflask.com/<slug>' }
          type: string
        layout:
          $ref: 'api-project.yaml#/components/schemas/layout'
        content:
          $ref: 'api-project.yaml#/components/schemas/content'
        credits:
          $ref: 'api-project.yaml#/components/schemas/credits'
        style:
          $ref: 'api-project.yaml#/components/schemas/style'
    credits:
      x-clearflask-page: { order: 13, name: 'Credits', description: 'Define a currency for your users.' }
      title: CreditFormatter
      type: object
      properties:
        increment:
          x-clearflask-prop: { order: 1, name: 'Increments', description: 'Minimum increment to consider significant.', placeholder: '0' }
          type: number
        formats:
          x-clearflask-prop: { order: 2, name: 'Display rules', description: '
            Your base currency value will be displayed to your users based on the following rules.
            Rules are evaluated in order, the first rule matching a range will take effect.
            The credits will be multiplied by the multiplier, rounded based on significant digits,
            and finally prefixed and suffixed.' }
          type: array
          items:
            title: CreditFormatterEntry
            type: object
            properties:
              greaterOrEqual:
                x-clearflask-prop: { order: 3, name: 'Range: Greater than or equal', description: 'Applies this format only if credit value is greater than or equal to this value' }
                type: number
              lessOrEqual:
                x-clearflask-prop: { order: 4, name: 'Range: Less than or equal', description: 'Applies this format only if credit value is less than or equal to this value' }
                type: number
              multiplier:
                x-clearflask-prop: { order: 5, name: 'Multiplier', description: 'Multiply value before displaying' }
                type: number
              minimumFractionDigits:
                x-clearflask-prop: { order: 6, name: 'Min decimals', description: 'Minimum amount of decimals to display regardless of value' }
                type: integer
              maximumFractionDigits:
                x-clearflask-prop: { order: 7, name: 'Max decimals', description: 'Maximum amount of decimals to display regardless of value' }
                type: integer
              prefix:
                x-clearflask-prop: { order: 1, name: 'Prefix', description: 'Text to prepend before the value' }
                type: string
              suffix:
                x-clearflask-prop: { order: 2, name: 'Suffix', description: 'Text to append after the value' }
                type: string
    style:
      x-clearflask-page: { order: 14, name: 'Style' }
      title: Style
      type: object
      required:
        - palette
        - typography
        - animation
      properties:
        palette:
          x-clearflask-prop: { order: 2, name: 'Palette' }
          title: Palette
          type: object
          required:
            - darkMode
          properties:
            darkMode:
              x-clearflask-prop: { order: 1, name: 'Dark mode' }
              type: boolean
            primary:
              x-clearflask-prop: { order: 2, subType: 'color', name: 'Primary color' }
              type: string
              pattern: '^(#([\da-f]{1,2}){3}|(rgba?|hsla?)\([\d, ]+\))$'
            secondary:
              x-clearflask-prop: { order: 3, subType: 'color', name: 'Secondary color' }
              type: string
              pattern: '^(#([\da-f]{1,2}){3}|(rgba?|hsla?)\([\d, ]+\))$'
            text:
              x-clearflask-prop: { order: 4, subType: 'color', name: 'Text color' }
              type: string
              pattern: '^(#([\da-f]{1,2}){3}|(rgba?|hsla?)\([\d, ]+\))$'
            background:
              x-clearflask-prop: { order: 5, subType: 'color', name: 'Background color' }
              type: string
              pattern: '^(#([\da-f]{1,2}){3}|(rgba?|hsla?)\([\d, ]+\))$'
            backgroundPaper:
              x-clearflask-prop: { order: 6, subType: 'color', name: 'Inner background color' }
              type: string
              pattern: '^(#([\da-f]{1,2}){3}|(rgba?|hsla?)\([\d, ]+\))$'
            funding:
              x-clearflask-prop: { order: 7, subType: 'color', name: 'Funding progress bar color' }
              type: string
              pattern: '^(#([\da-f]{1,2}){3}|(rgba?|hsla?)\([\d, ]+\))$'
        typography:
          x-clearflask-prop: { order: 3, name: 'Typography' }
          title: Typography
          type: object
          properties:
            fontFamily:
              x-clearflask-prop: { order: 1, name: 'Font Family' }
              type: string
            fontSize:
              x-clearflask-prop: { order: 2, name: 'Font Size' }
              type: number
    support:
      x-clearflask-page: { order: 4, name: 'Support' }
      title: Support
      type: object
      required:
        - comment
      properties:
        fund:
          x-clearflask-prop: { order: 1, name: 'Enable funding' }
          title: Funding
          type: object
          required:
            - showFunds
            - showFunders
          properties:
            showFunds:
              x-clearflask-prop: { order: 1, name: 'Show funds', description: '' }
              type: boolean
            showFunders:
              x-clearflask-prop: { order: 1, name: 'Show funders', description: '' }
              type: boolean
        vote:
          x-clearflask-prop: { order: 1, name: 'Enable voting' }
          title: Voting
          type: object
          required:
            - enableDownvotes
            - showVotes
            - showVoters
          properties:
            enableDownvotes:
              x-clearflask-prop: { order: 1, name: 'Enable downvoting', description: '' }
              type: boolean
            showVotes:
              x-clearflask-prop: { order: 1, name: 'Show votes', description: '' }
              type: boolean
            showVoters:
              x-clearflask-prop: { order: 1, name: 'Show voters', description: '' }
              type: boolean
        express:
          x-clearflask-prop: { order: 1, name: 'Enable expression' }
          title: Expressing
          type: object
          properties:
            limitEmojis:
              x-clearflask-prop: { order: 3, name: 'Emoji whitelist', description: 'If enabled, limit the emojis that can be displayed. Additionally, set the weight of each emoji' }
              type: array
              items:
                x-clearflask-prop: { order: 1, name: 'Emojis' }
                title: Expression
                type: object
                required:
                  - expressionId
                  - weight
                  - display
                  - text
                properties:
                  display:
                    x-clearflask-prop: { order: 1, name: 'Display', subType: 'emoji' }
                    description: TODO Must be unique, used as an ID
                    type: string
                  text:
                    x-clearflask-prop: { order: 2, name: 'Text' }
                    type: string
                  weight:
                    x-clearflask-prop: { order: 3, name: 'Weight' }
                    minimum: -1
                    maximum: 1
                    type: number
        comment:
          x-clearflask-prop: { order: 1, name: 'Enable comments', defaultValue: true }
          type: boolean
    layout:
      x-clearflask-page: { order: 11, name: 'Layout' }
      title: Layout
      type: object
      required:
        - pages
        - menu
      properties:
        menu:
          x-clearflask-prop: { order: 1, name: 'Menu', description: 'Customize App Menu with buttons and dropdowns' }
          type: array
          items:
            title: Menu
            type: object
            required:
              - menuId
              - pageIds
            properties:
              menuId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              pageIds:
                x-clearflask-prop: { order: 1, name: 'Pages', description: 'Pages to link to. If more than one, a dropdown will display.' }
                x-clearflask-prop-link: { idPropName: 'pageId', linkPath: ['layout', 'pages'], displayPropName: 'name'}
                type: array
                items:
                  type: string
              name:
                x-clearflask-prop: { order: 2, name: 'Name Override', description: 'Menu title to show. Not necessary when a single page is displayed', placeholder: 'Home' }
                type: string
        pages:
          x-clearflask-page-group: { order: 2, name: 'Pages', tablePropertyNames:['name', 'slug'] }
          type: array
          items:
            x-clearflask-page: { name: 'Page', nameFromProp: 'name' }
            title: Page
            type: object
            required:
              - pageId
              - name
              - slug
              - components
              - panels
            properties:
              pageId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { defaultValue: 'Page <>', order: 1, name: 'Name', description: 'Page name shown on links and buttons pointing to this page', placeholder: 'Feature Requests', slugAutoComplete:['layout','pages','<>', 'slug'] }
                type: string
              slug:
                x-clearflask-prop: { order: 2, name: 'Slug', description: 'Text to display in the URL part of this page', placeholder: 'feature-requests' }
                type: string
              title:
                x-clearflask-prop: { order: 3, name: 'Title', description: 'Main title visible on the tab and as first text on this page', placeholder: 'Feature Requests' }
                type: string
              description:
                x-clearflask-prop: { order: 4, name: 'Description', description: 'Description of this page visible just below the title', placeholder: 'Submit your...' }
                type: string
              panels:
                x-clearflask-page-group: { order: 5, name: 'Panels', description: 'Horizontal panels of ideas. Typically used for featuring specific types of ideas such as currently funding ideas', tablePropertyNames:['title'] }
                type: array
                items:
                  $ref: 'api-project.yaml#/components/schemas/PagePanelWithSearchControls'
              board:
                $ref: 'api-project.yaml#/components/schemas/PageBoard'
              explorer:
                $ref: 'api-project.yaml#/components/schemas/PageExplorer'
    workflow:
      x-clearflask-page: { order: 5, name: 'Workflow', nameFromProp: 'name' }
      title: Workflow
      type: object
      required:
        - statuses
      properties:
        entryStatus:
          x-clearflask-prop: { order: 2, name: 'Entry status', description: 'First status to assign newly created items' }
          x-clearflask-prop-link: { idPropName: 'statusId', linkPath: ['content', 'categories', '<>', 'workflow', 'statuses'], displayPropName: 'name', colorPropName: 'color'}
          type: string
        statuses:
          x-clearflask-page-group: { order: 3, name: 'Statuses', description: 'List of statuses an idea can be in.', tablePropertyNames:['name', 'color', 'nextStatusIds'] }
          type: array
          items:
            x-clearflask-page: { name: 'Status', nameFromProp: 'name' }
            title: IdeaStatus
            type: object
            required:
              - statusId
              - name
              - disableFunding
              - disableSupport
              - disableIdeaEdits
              - disableComments
            properties:
              statusId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { order: 1, defaultValue: 'Status <>', name: 'Name', description: 'Display name shown to user', placeholder: 'In Progress' }
                type: string
              nextStatusIds:
                x-clearflask-prop: { order: 3, name: 'Next Statuses', description: 'List of statuses that can be transitioned to from this status' }
                x-clearflask-prop-link: { idPropName: 'statusId', linkPath: ['content', 'categories', '<>', 'workflow', 'statuses'], displayPropName: 'name', colorPropName: 'color'}
                type: array
                items:
                  type: string
              color:
                x-clearflask-prop: { order: 2, subType: 'color', name: 'Color', description: 'Display color' }
                type: string
              disableFunding:
                x-clearflask-prop: { order: 4, name: 'Disable Funding', description: 'Overrides parent settings to disable funding during this status' }
                type: boolean
              disableSupport:
                x-clearflask-prop: { order: 5, name: 'Disable Support', description: 'Overrides parent settings to disable support during this status' }
                type: boolean
              disableIdeaEdits:
                x-clearflask-prop: { order: 6, name: 'Disable Editing', description: 'Overrides parent settings to disable editing of the idea during this status' }
                type: boolean
              disableComments:
                x-clearflask-prop: { order: 7, name: 'Disable Commenting', description: 'Overrides parent settings to disable commenting during this status' }
                type: boolean
    tagging:
      x-clearflask-page: { order: 6, name: 'Tagging' }
      title: Tagging
      type: object
      required:
        - tags
        - tagGroups
      properties:
        tags:
          x-clearflask-prop: { order: 1, name: 'Tags', description: 'Tags' }
          type: array
          items:
            title: Tag
            type: object
            required:
              - tagId
              - name
            properties:
              tagId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { defaultValue: 'Tag <>', order: 1, name: 'Name', description: 'Tag Name' }
                type: string
              color:
                x-clearflask-prop: { subType: 'color', order: 2, name: 'Color', description: 'Display color' }
                type: string
        tagGroups:
          x-clearflask-page-group: { order: 2, name: 'Tag Groups', description: 'A set of tags you can use', tablePropertyNames:['name', 'tagIds'] }
          type: array
          items:
            x-clearflask-page: { order: 5, name: 'Tag Group', nameFromProp: 'name' }
            title: TagGroup
            type: object
            required:
              - tagGroupId
              - userSettable
              - tagIds
            properties:
              tagGroupId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { order: 1, defaultValue: 'Tag Group <>', name: 'Name', description: 'Tag Group name' }
                type: string
              minRequired:
                x-clearflask-prop: { order: 2, name: 'Minimum required', description: 'Minimum number of tags that need to be chosen by user' }
                type: integer
              maxRequired:
                x-clearflask-prop: { order: 3, name: 'Maximum required', description: 'Maximum number of tags that can be chosen by user' }
                type: integer
              userSettable:
                x-clearflask-prop: { order: 4, name: 'User settable', description: 'Can be set by user', defaultValue: true }
                type: boolean
              tagIds:
                x-clearflask-prop: { order: 5, name: 'Tags', description: 'Set of tags in this group' }
                x-clearflask-prop-link: { idPropName: 'tagId', linkPath: ['content', 'categories', '<>', 'tagging', 'tags'], displayPropName: 'name', colorPropName: 'color'}
                type: array
                items:
                  type: string
    content:
      x-clearflask-page: { order: 12, name: 'Content' }
      title: Content
      type: object
      required:
        - categories
      properties:
        categories:
          x-clearflask-page-group: { order: 2, name: 'Categories', tablePropertyNames:['name'] }
          type: array
          items:
            x-clearflask-page: { name: 'Category', nameFromProp: 'name' }
            title: Category
            type: object
            required:
              - categoryId
              - name
              - workflow
              - support
              - tagging
              - visibility
            properties:
              categoryId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { defaultValue: 'Category <>', order: 1, name: 'Name', description: 'Group Name' }
                type: string
              color:
                x-clearflask-prop: { subType: 'color', order: 2, name: 'Color', description: 'Display color' }
                type: string
              workflow:
                $ref: 'api-project.yaml#/components/schemas/workflow'
              support:
                $ref: 'api-project.yaml#/components/schemas/support'
              tagging:
                $ref: 'api-project.yaml#/components/schemas/tagging'
              visibility:
                x-clearflask-prop: { name: 'Default Visibility', description: 'Whether a post is visible publicly by other users' }
                type: string
                enum:
                  - Public
                  - PublicOrPrivate
                  - Private
    ConfigAdmin:
      description: >-
        All Config properties available for admins.
        Used for both reading and writing.
      allOf:
        - $ref: 'api-project.yaml#/components/schemas/Config'
        - type: object
          properties:
        # TODO OAuth
        # TODO Email/Push notifications
        # TODO Credit income
        # TODO Trusted public keys
    PageBoard:
      x-clearflask-page: { order: 6, name: 'Board', description: 'Series of vertical panels of ideas. Typically used for displaying a roadmap with panels such as: Planned, In progress, Completed.' }
      type: object
      properties:
        title:
          type: string
        controls:
            $ref: 'api-project.yaml#/components/schemas/PagePanelSearchControls'
        panels:
          x-clearflask-page-group: { order: 3, name: 'Panels', description: 'Horizontal panels of ideas. Typically used for featuring specific types of ideas such as currently funding ideas', tablePropertyNames:['title'] }
          type: array
          items:
            $ref: 'api-project.yaml#/components/schemas/PagePanel'
      required:
        - panels
    PagePanelWithSearchControls:
      allOf:
        - $ref: 'api-project.yaml#/components/schemas/PagePanel'
        - $ref: 'api-project.yaml#/components/schemas/PagePanelSearchControls'
    PostDisplay:
      x-clearflask-prop: { order: 1, name: 'Choose fields', description: 'Force certain fields to be hidden from display in this panel.', defaultValue: true}
      type: object
      title: PanelDisplay
      properties:
        titleTruncateLines:
          x-clearflask-prop: { order: 1, name: 'Title maximum lines', placeholder: 1}
          type: number
        descriptionTruncateLines:
          x-clearflask-prop: { order: 2, name: 'Description maximum lines', placeholder: 2}
          type: number
        showDescription:
          x-clearflask-prop: { order: 3, name: 'Force show Description' }
          type: boolean
        showCommentCount:
          x-clearflask-prop: { order: 4, name: 'Force show Comment Count' }
          type: boolean
        showCategoryName:
          x-clearflask-prop: { order: 5, name: 'Force show CategoryName' }
          type: boolean
        showCreated:
          x-clearflask-prop: { order: 6, name: 'Force show Created' }
          type: boolean
        showAuthor:
          x-clearflask-prop: { order: 7, name: 'Force show Author' }
          type: boolean
        showStatus:
          x-clearflask-prop: { order: 8, name: 'Force show Status' }
          type: boolean
        showTags:
          x-clearflask-prop: { order: 9, name: 'Force show Tags' }
          type: boolean
        showVoting:
          x-clearflask-prop: { order: 10, name: 'Force show Voting' }
          type: boolean
        showFunding:
          x-clearflask-prop: { order: 11, name: 'Force show Funding' }
          type: boolean
        showExpression:
          x-clearflask-prop: { order: 12, name: 'Force show Expression' }
          type: boolean
    PagePanel:
      x-clearflask-page: { name: 'Panel', nameFromProp: 'title' }
      type: object
      required:
        - search
        - display
      properties:
        title:
          type: string
        hideIfEmpty:
          type: boolean
        search:
          $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
        display:
          $ref: 'api-project.yaml#/components/schemas/PostDisplay'
    PagePanelSearchControls:
      type: object
      properties:
        enableSearchByCategory:
          type: boolean
        enableSearchByStatus:
          type: boolean
        enableSearchByTag:
          type: boolean
    PageExplorer:
      x-clearflask-page: { order: 7, name: 'Explorer', description: 'An idea explorer with user-defined search criteria as well as an option to submit own idea.' }
      type: object
      required:
        - panel
      properties:
        title:
          x-clearflask-prop: { order: 1, name: 'Title', description: 'Title to display above the explorer.' }
          type: string
        panel:
          $ref: 'api-project.yaml#/components/schemas/PagePanelWithSearchControls'
    VersionedConfig:
      type: object
      required:
        - version
        - config
      properties:
        config:
          $ref: 'api-project.yaml#/components/schemas/Config'
        version:
          type: string
    VersionedConfigAdmin:
      type: object
      required:
        - version
        - config
      properties:
        config:
          $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
        version:
          type: string
    Projects:
      type: object
      required:
        - configs
      properties:
        configs:
          type: array
          items:
            $ref: 'api-project.yaml#/components/schemas/VersionedConfigAdmin'

/project/{projectId}/config:
  get:
    operationId: configGet
    tags: [Project]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/VersionedConfig'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/config/admin:
  get:
    operationId: configGetAllAdmin
    tags: [ProjectAdmin]
    parameters:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/Projects'
/project/admin:
  post:
    operationId: projectCreateAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: NewProjectResult
              type: object
              required:
                - projectId
                - config
              properties:
                projectId:
                  type: string
                config:
                  $ref: 'api-project.yaml#/components/schemas/VersionedConfigAdmin'
/project/{projectId}/admin/config:
  get:
    operationId: configGetAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/VersionedConfigAdmin'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  put:
    operationId: configSetAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: versionLast
        in: path
        required: true
        schema:
          type: string
      - name: config
        in: query
        required: true
        schema:
          $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/VersionedConfigAdmin'
      '412':
        $ref: 'api-client.yaml#/components/responses/ConfigChanged'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
