
components:
  schemas:
    Config:
      x-clearflask-page: { name: 'Project', nameFromProp: 'name' }
      description: Config properties visible both to client app and admins.
      type: object
      required:
        - test
        - projectId
        - name
        - slug
        - credits
        - expression
        - layout
        - grouping
        - tagging
        - workflows
        - style
      properties:
        # TODO remove test page
        # test:
        #   $ref: 'api-test.yaml#/components/schemas/ConfigTest'
        projectId:
          x-clearflask-prop: { subType: 'id' }
          type: string
        website:
          x-clearflask-prop: { order: 1, name: 'Website', description: 'Your external website', placeholder: 'https://' }
          type: string
        name:
          x-clearflask-prop: { order: 2, name: 'Name', description: 'Project name visible on your page' }
          type: string
        logoUrl:
          x-clearflask-prop: { order: 3, name: 'Logo', description: 'Add your logo with a url', placeholder: 'https://' }
          description: Location of the logo to display.
          type: string
        projectSlug:
          x-clearflask-prop: { order: 4, name: 'Slug', description: 'Url suffix of your project: https://clearflask.com/<slug>' }
          type: string
        credits:
          $ref: 'api-project.yaml#/components/schemas/credits'
        expression:
          $ref: 'api-project.yaml#/components/schemas/expression'
        layout:
          $ref: 'api-project.yaml#/components/schemas/layout'
        grouping:
          $ref: 'api-project.yaml#/components/schemas/grouping'
        tagging:
          $ref: 'api-project.yaml#/components/schemas/tagging'
        workflows:
          $ref: 'api-project.yaml#/components/schemas/workflows'
        style:
          $ref: 'api-project.yaml#/components/schemas/style'
    credits:
      x-clearflask-page: { order: 3, name: 'Credits', description: 'Define a currency for your users.' }
      title: CreditFormatter
      type: object
      properties:
        increment:
          x-clearflask-prop: { order: 1, name: 'Increments', description: 'Minimum increment to consider significant.', placeholder: '0' }
          type: number
        formats:
          x-clearflask-prop: { order: 2, name: 'Display rules', description: '
            Your base currency value will be displayed to your users based on the following rules.
            Rules are evaluated in order, the first rule matching a range will take effect.
            The credits will be multiplied by the multiplier, rounded based on significant digits,
            and finally prefixed and suffixed.' }
          type: array
          items:
            title: CreditFormatterEntry
            type: object
            properties:
              greaterOrEqual:
                x-clearflask-prop: { order: 3, name: 'Range: Greater than or equal', description: 'Applies this format only if credit value is greater than or equal to this value' }
                type: number
              lessOrEqual:
                x-clearflask-prop: { order: 4, name: 'Range: Less than or equal', description: 'Applies this format only if credit value is less than or equal to this value' }
                type: number
              multiplier:
                x-clearflask-prop: { order: 5, name: 'Multiplier', description: 'Multiply value before displaying' }
                type: number
              minimumFractionDigits:
                x-clearflask-prop: { order: 6, name: 'Min decimals', description: 'Minimum amount of decimals to display regardless of value' }
                type: integer
              maximumFractionDigits:
                x-clearflask-prop: { order: 7, name: 'Max decimals', description: 'Maximum amount of decimals to display regardless of value' }
                type: integer
              prefix:
                x-clearflask-prop: { order: 1, name: 'Prefix', description: 'Text to prepend before the value' }
                type: string
              suffix:
                x-clearflask-prop: { order: 2, name: 'Suffix', description: 'Text to append after the value' }
                type: string
    style:
      x-clearflask-page: { order: 7, name: 'Style' }
      title: Style
      type: object
      required:
      properties:
        placeholderProperty:
          type: string
    expression:
      x-clearflask-page: { order: 4, name: 'Expression' }
      title: Expression
      type: object
      required:
      properties:
        placeholderProperty:
          type: string
    layout:
      x-clearflask-page: { order: 1, name: 'Layout' }
      title: Layout
      type: object
      required:
        - pages
        - menu
      properties:
        menu:
          x-clearflask-prop: { order: 1, name: 'Menu', description: 'Customize App Menu with buttons and dropdowns' }
          type: array
          items:
            title: Menu
            type: object
            required:
              - menuId
              - pageIds
            properties:
              menuId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              pageIds:
                x-clearflask-prop: { order: 1, name: 'Pages', description: 'Pages to link to. If more than one, a dropdown will display.' }
                x-clearflask-prop-link: { idPropName: 'pageId', linkPath: ['layout', 'pages'], displayPropName: 'name'}
                type: array
                items:
                  type: string
              name:
                x-clearflask-prop: { order: 2, name: 'Name Override', description: 'Menu title to show. Not necessary when a single page is displayed', placeholder: 'Home' }
                type: string
        pages:
          x-clearflask-page-group: { order: 2, name: 'Pages', tablePropertyNames:['name', 'slug'] }
          type: array
          items:
            x-clearflask-page: { name: 'Page', nameFromProp: 'name' }
            title: Page
            type: object
            required:
              - pageId
              - name
              - slug
              - components
              - panels
            properties:
              pageId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { defaultValue: 'Page<>', order: 1, name: 'Name', description: 'Page name shown on links and buttons pointing to this page', placeholder: 'Feature Requests', slugAutoComplete:['layout','pages','<>', 'slug'] }
                type: string
              slug:
                x-clearflask-prop: { order: 2, name: 'Slug', description: 'Text to display in the URL part of this page', placeholder: 'feature-requests' }
                type: string
              title:
                x-clearflask-prop: { order: 3, name: 'Title', description: 'Main title visible on the tab and as first text on this page', placeholder: 'Feature Requests' }
                type: string
              description:
                x-clearflask-prop: { order: 4, name: 'Description', description: 'Description of this page visible just below the title', placeholder: 'Submit your...' }
                type: string
              panels:
                x-clearflask-page-group: { order: 5, name: 'Panels', description: 'Horizontal panels of ideas. Typically used for featuring specific types of ideas such as currently funding ideas', tablePropertyNames:['title'] }
                type: array
                items:
                  $ref: 'api-project.yaml#/components/schemas/PagePanel'
              board:
                $ref: 'api-project.yaml#/components/schemas/PageBoard'
              explorer:
                $ref: 'api-project.yaml#/components/schemas/PageExplorer'
    workflows:
      x-clearflask-page: { order: 5, name: 'Workflows' }
      title: Workflow
      type: object
      required:
        - workflow
      properties:
        workflow:
          x-clearflask-page-group: { order: 1, name: 'Workflow', description: 'List of statuses an idea can be in.', tablePropertyNames:['name'] }
          type: array
          items:
            x-clearflask-page: { order: 5, name: 'Workflow', nameFromProp: 'name' }
            title: Workflow
            type: object
            required:
              - workflowId
              - name
              - entryStatus
              - statuses
            properties:
              workflowId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { order: 1, defaultValue: 'Workflow<>', name: 'Name', description: 'Workflow name' }
                type: string
              entryStatus:
                x-clearflask-prop: { order: 2, name: 'Entry status', description: 'First status to assign newly created items' }
                x-clearflask-prop-link: { idPropName: 'statusId', linkPath: ['workflows', 'workflow', '<>', 'statuses'], displayPropName: 'name', colorPropName: 'color'}
                type: string
              statuses:
                x-clearflask-page-group: { order: 3, name: 'Statuses', description: 'List of statuses an idea can be in.', tablePropertyNames:['name', 'color', 'nextStatusIds'] }
                type: array
                items:
                  x-clearflask-page: { name: 'Status', nameFromProp: 'name' }
                  title: IdeaStatus
                  type: object
                  required:
                    - statusId
                    - name
                    - disableFunding
                    - disableSupport
                    - disableIdeaEdits
                    - disableComments
                  properties:
                    statusId:
                      x-clearflask-prop: { subType: 'id' }
                      type: string
                    name:
                      x-clearflask-prop: { order: 1, defaultValue: 'Status<>', name: 'Name', description: 'Display name shown to user', placeholder: 'In Progress' }
                      type: string
                    nextStatusIds:
                      x-clearflask-prop: { order: 3, name: 'Next Statuses', description: 'List of statuses that can be transitioned to from this status' }
                      x-clearflask-prop-link: { idPropName: 'statusId', linkPath: ['workflows', 'workflow', '<>', 'statuses'], displayPropName: 'name', colorPropName: 'color'}
                      type: array
                      items:
                        type: string
                    color:
                      x-clearflask-prop: { order: 2, subType: 'color', name: 'Color', description: 'Display color' }
                      type: string
                    disableFunding:
                      x-clearflask-prop: { order: 4, name: 'Disable Funding', description: 'Overrides parent settings to disable funding during this status' }
                      type: boolean
                    disableSupport:
                      x-clearflask-prop: { order: 5, name: 'Disable Support', description: 'Overrides parent settings to disable support during this status' }
                      type: boolean
                    disableIdeaEdits:
                      x-clearflask-prop: { order: 6, name: 'Disable Editing', description: 'Overrides parent settings to disable editing of the idea during this status' }
                      type: boolean
                    disableComments:
                      x-clearflask-prop: { order: 7, name: 'Disable Commenting', description: 'Overrides parent settings to disable commenting during this status' }
                      type: boolean
    tagging:
      x-clearflask-page: { order: 6, name: 'Tagging' }
      title: Tagging
      type: object
      required:
        - tags
      properties:
        tags:
          x-clearflask-page-group: { order: 3, name: 'Tags', tablePropertyNames:['name', 'color'] }
          type: array
          items:
            x-clearflask-page: { name: 'Tag', nameFromProp: 'name' }
            title: IdeaTag
            type: object
            properties:
              tagId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { defaultValue: 'Tag<>', order: 1, name: 'Name', description: 'Tag Name' }
                type: string
              color:
                x-clearflask-prop: { subType: 'color', order: 2, name: 'Color', description: 'Display color' }
                type: string
            required:
              - tagId
              - name
    grouping:
      x-clearflask-page: { order: 2, name: 'Feedback' }
      title: Feedback
      type: object
      required:
        - groups
      properties:
        groups:
          x-clearflask-page-group: { order: 2, name: 'Groups', tablePropertyNames:['name', 'color'] }
          type: array
          items:
            x-clearflask-page: { name: 'Group', nameFromProp: 'name' }
            title: IdeaGroup
            type: object
            properties:
              groupId:
                x-clearflask-prop: { subType: 'id' }
                type: string
              name:
                x-clearflask-prop: { defaultValue: 'Group<>', order: 1, name: 'Name', description: 'Group Name' }
                type: string
              color:
                x-clearflask-prop: { subType: 'color', order: 2, name: 'Color', description: 'Display color' }
                type: string
              allowFunding:
                x-clearflask-prop: { name: 'Allow Funding', description: 'Allows users to use their credits' }
                type: boolean
              allowSupport:
                x-clearflask-prop: { name: 'Allow Support', description: 'Allows users to show support' }
                type: boolean
              allowEdits:
                x-clearflask-prop: { name: 'Allow Edits', description: 'Allows users to edit submitted posts' }
                type: boolean
              allowComments:
                x-clearflask-prop: { name: 'Allow Comments', description: 'Allows users to comment on posts' }
                type: boolean
              workflowId:
                x-clearflask-prop: { name: 'Default Status', description: 'Idea status to assign if any on newly created ideas. Can be overriden in group.' }
                x-clearflask-prop-link: { idPropName: 'workflowId', linkPath: ['workflows', 'workflow'], displayPropName: 'name'}
                type: string
              tag:
                type: object
                properties:
                  defaultIdeaTagIds:
                    x-clearflask-prop: { name: 'Default Tag Ids', description: 'Idea tag ids to apply. Cannot be modified by user.' }
                    type: array
                    items:
                      type: string
                  settableIdeaTagIdsOnCreate:
                    x-clearflask-prop-link: { idPropName: 'tagId', linkPath: ['tagging', 'tags'], displayPropName: 'name', colorPropName: 'color'}
                    description: >-
                      In addition to project level idea tags,
                      these tags can also be added by user
                      when creating an idea.
                    type: array
                    items:
                      type: string
                  tagsOnCreate:
                    x-clearflask-prop: { name: 'Settable Tag Id groups', description: 'These tags can be added by user when creating a new idea. Will be merged with configuration inside IdeaGroup.' }
                    type: array
                    items:
                      title: TagGroupings
                      type: object
                      properties:
                        minRequired:
                          x-clearflask-prop: { name: 'Minimum required', description: 'Minimum number of tags that need to be chosen by user.' }
                          type: number
                        maxRequired:
                          x-clearflask-prop: { name: 'Maximum required', description: 'Maximum number of tags that can be chosen by user.' }
                          type: number
                        tagIds:
                          x-clearflask-prop: { name: 'Tags', description: 'List of tags for this group.' }
                          type: array
                          items:
                            type: string
              visibility:
                type: object
                properties:
                  defaultIdeaVisibility:
                    x-clearflask-prop: { name: 'Default Visibility', description: 'Whether a post is visible publicly by other users.' }
                    type: string
                    enum:
                      - Public
                      - Private
                  settableIdeaVisibility:
                    x-clearflask-prop: { name: 'Settable Visibility', description: 'User can toggle whether a post is visible publicly by other users or privately only by you.' }
                    type: boolean
            required:
              - groupId
              - name
              - tag
              - visibility
    ConfigAdmin:
      description: >-
        All Config properties available for admins.
        Used for both reading and writing.
      allOf:
        - $ref: 'api-project.yaml#/components/schemas/Config'
        - type: object
          properties:
        # TODO OAuth
        # TODO Email/Push notifications
        # TODO Credit income
        # TODO Trusted public keys
    PageBoard:
      x-clearflask-page: { order: 6, name: 'Board', description: 'Series of vertical panels of ideas. Typically used for displaying a roadmap with panels such as: Planned, In progress, Completed.' }
      type: object
      properties:
        title:
          type: string
        panels:
          type: array
          items:
            $ref: 'api-project.yaml#/components/schemas/PagePanel'
      required:
        - panels
    PagePanel:
      x-clearflask-page: { name: 'Panel', nameFromProp: 'title' }
      type: object
      properties:
        title:
          type: string
        hideIfEmpty:
          type: boolean
        ideaList:
          $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
        enableSearchByGroup:
          type: boolean
        enableSearchByStatus:
          type: boolean
        enableSearchByTag:
          type: boolean
      required:
        - ideaList
    PageExplorer:
      x-clearflask-page: { order: 7, name: 'Explorer', description: 'An idea explorer with user-defined search criteria as well as an option to submit own idea.' }
      type: object
      properties:
        title:
          x-clearflask-prop: { order: 1, name: 'Title', description: 'Title to display above the explorer.' }
          type: string
        ideaList:
          $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
      required:
        - ideaList
    Projects:
      type: object
      required:
        - configs
      properties:
        configs:
          type: array
          items:
              $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'

/project/{projectId}/config:
  get:
    operationId: configGet
    tags: [Project]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/Config'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/config/admin:
  get:
    operationId: configGetAllAdmin
    tags: [ProjectAdmin]
    parameters:
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/Projects'
/project/admin:
  post:
    operationId: projectCreateAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: NewProjectResult
              type: object
              required:
                - projectId
                - config
              properties:
                projectId:
                  type: string
                config:
                  $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
/project/{projectId}/admin/config:
  get:
    operationId: configGetAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  put:
    operationId: configSetAdmin
    tags: [ProjectAdmin]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: versionLast
        in: path
        required: true
        schema:
          type: string
      - name: config
        in: query
        required: true
        schema:
          $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: NewConfigResult
              type: object
              properties:
                config:
                  $ref: 'api-project.yaml#/components/schemas/ConfigAdmin'
                version:
                  type: string
              required:
                - config
                - version
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
